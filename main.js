function convert(){var e=document.getElementById("input").value;try{var t=(convertSQL(e)+"\n->get();").trim();t=markUp(t);var r="get</span><span style='color:gray'>(</span><span style='color:gray'>)</span><span style='color:gray'>;</span>";document.getElementById("result").innerHTML=t.split(r)[0]+r}catch(e){console.log(e.message),document.getElementById("result").innerHTML="Cannot parse your SQL Statement. Please check your syntax. \nPlease note, only SELECT statements are considered valid syntax.\n\nRules: \n1. Use parentheses when using BETWEEN operator. \n\te.g. \n\tSELECT * FROM t WHERE (column_name BETWEEN value1 AND value2);\n2. When using ALIAS, always use the AS linking verb. \n\te.g. \n\tSELECT uid AS `user_id`;\n3. Always use backticks (`) for aliases."}}function getEnders(e){var t=[],r=/(limit (\d+), (\d+)|limit (\d+) offset (\d+)|limit (\d+))/gi,n=getAll(r,e=e.toLowerCase().trim()),i=n.matches;return i.length>0&&(t.push(getLimit(i[0].replace(/limit/g,"").trim())),e=n.input),(i=(n=getAll(r=/(order by (.+) ((asc|desc))?)/gi,e)).matches).length>0&&(t.push(`->orderBy(${i[0].replace(/order by/g,"").trim().split(" ").map(function(e){return`"${e}"`}).join(",")})`),e=n.input),(i=(n=getAll(r=/((group by (\w\.\w+))|(group by (\w+)))/gi,e)).matches).length>0&&(t.push(`->groupBy(${i[0].replace(/group by/g,"").trim().split(" ").map(function(e){return`"${e}"`}).join(",")})`),e=n.input),{input:e,strings:t}}function getLimit(e){return string="",/offset|,/g.test(e)?(parts=e.split(/offset|,/g),/offset/g.test(e)?(void 0!==parts[1]&&(string+=`->offset(${(parts[1]||"").trim()})`),string+=`->limit(${parts[0].trim()})`):(string+=`->offset(${parts[0].trim()})`,void 0!==parts[1]&&(string+=`->limit(${(parts[1]||"").trim()})`))):string+=`->limit(${e})`,string}function convertSQL(e,t=!1){if(!e.toLowerCase().includes("select")||!e.toLowerCase().includes("from"))throw"Syntax Error";if(!window.location.href.includes("jjlabajo"))throw"error";var r=(e=(e=(e=(e=(e=(e=(e=(e=e.toLowerCase().trim()).replace(/;/g,"")).replace(/"/g,"'")).replace(/=/g," = ")).replace(/,/g,", ")).replace(/in\(/g,"in (")).replace(/(\r\n|\n|\r)/gm," ")).replace(/\s+/gm," ")).split(/ union /g),n="",i="";void 0!==r[1]&&(n="$table = "+convertSQL(r[1])+";\n\n",i="\n->union($table)"),e=r[0],t&&(e=e.trim().replace(/^\(/g,"").replace(/\)$/g,""));var o=getAll(/case when (.+?) end (.+?)`(.+?)`/g,e);select_raws=o.matches,e=(o=getAll(/(([a-z]|[a-z]_[a-z])+?| )\(.+?\)( | as)`.+?`/g,e=o.input,"select_subquery_function")).input,select_subqueries_functions=o.result,e=(o=getAll(/( *?\(.+?\))/g,e,"where_subquery_group")).input,where_subqueries_groups=o.result;var s=getEnders(e=e.replace(/\s+/gm," ")),a=(e=s.input).split(/select | from | where | order by | limit /),l={select:a[1]||"",from:a[2]||"",where:a[3]||"",order_by:a[4]||"",limit:a[5]||""};return output_string=compose(l,select_raws,select_subqueries_functions,where_subqueries_groups,t),semicolon="",t&&(semicolon=";"),delimiter="",s.strings.length>0&&(delimiter="\n"),`${n}${output_string}${delimiter}${i}${s.strings.join("\n")}${semicolon}`}function compose(e,t,r,n,i){var o,s=n,a=[],l="\n",c=e.from.split(/left join|right join|inner join|full join|cross join|join/);o=c[0].trim(),i?(a.push(`$query->from("${o}")`),l="\n\t"):a.push(`DB::table("${o}")`);var u=0;for(table_clause of c)0!=u?(a.push(join(table_clause,e.from.trim().match(/left join|right join|inner join|full join|cross join|join/g),u-1,s)),u++):u++;var p=e.select.split(",").filter(e=>!e.trim().includes("select_subquery_function")&&""!=e.trim()).map(function(e){return`"${e.trim()}"`}).join(", ");for(column of('"*"'!=p&&a.push(`->select(${changeGroups(p,s)})`),t))column=column.trim(),a.push(`->addSelect(DB::raw("${column}"))`);for(column of e.select.split(","))column=column.trim(),column.includes("select_subquery_function")&&(value=r[` ${column}`]||"",value=value.trim(),""!=value&&(/^\(.+?/g.test(value)?(alias=getAlias(value),""!=alias&&a.push(`->addSelect(["${alias}" => ${getSubquery(value)}])`)):a.push(`->addSelect(DB::raw("${value}"))`)));if(""!=e.where.trim())for(condition of(first_condition=e.where.split(/ and | or /)[0].trim(),""!=first_condition&&a.push(where(first_condition,s)),get_all=getAll(/ and | or /g,e.where.replace(first_condition,"").trim()),operators=get_all.matches,conditions=e.where.trim().split(/ and | or /g).map(function(e){return e.trim()}),u=0,conditions))if(0!=u){pre="or"==(operators[u-1]||"")?"orWhere":"where";try{a.push(where(condition,s,pre))}catch(e){console.log(u,conditions)}u++}else u++;return a.join(l)}function changeGroups(e,t){var r=/where_subquery_group_(\d+)_/g;if(r.test(e)&&(matches=e.match(r),Array.isArray(matches)))for(match of matches)void 0!==t[` ${match}`]&&(e=e.replace(match,t[` ${match}`].trim()).trim());return e}function join(e,t,r,n){if(Array.isArray(t)||(t=[]),void 0!==(t=t.map(function(e){return e.trim()}))[r]){var i=t[r].replace(/^(.)|\s+(.)/g,function(e){return e.toUpperCase()});i=lowerCaseFirstLetter(i=i.replace(/ /g,""));var o=e.split(/on/g)[0].trim();if("crossJoin"==i){if(regex=/where_subquery_group_(\d+)/g,regex.test(e)&&(matches=e.match(regex),Array.isArray(matches)))for(match of matches)void 0!==n[` ${match}`]&&(e=e.replace(match,n[` ${match}`].trim()).trim());return`->${i}(DB::raw("${e}"))`}return`->${i}("${o}", function($join){\n\t${joinCondition(e.replace(o,"").trim(),n)}\n})`}return""}function joinCondition(e,t){var r=[],n=(e=e.replace(/on/g,"")).split(/ and | or /g)[0].trim();""!=n&&r.push(conditionOn(n,t));var i=getAll(/ and | or /g,e.replace(n,"").trim());operators=i.matches;var o=e.trim().split(/ and | or /g).map(function(e){return e.trim()});for(condition of(x=0,o))if(0!=x){if(1==x){pre="or"==(operators[x-1]||"")?"orOn":"on";try{r.push(conditionOn(condition,t,pre))}catch(e){console.log(x,o),r.push(`->${pre}(DB::raw("${condition}"))`)}}else{pre="or"==(operators[x-1]||"")?"orWhere":"where";try{r.push(where(condition,t,pre))}catch(e){console.log(x,o),r.push(`->${pre}(DB::raw("${condition}"))`)}}x++}else x++;return"$join"+r.join("\n\t")+";"}function conditionOn(e,t,r="on"){var n=e.split(" ");return void 0===n[1]&&void 0!==t[` ${n[0].trim()}`]?`->${r}(DB::raw("${t[` ${n[0]}`].trim()}"))`:void 0===n[1]?`->${r}(DB::raw("${e.trim()}"))`:(last=`"${n[2].trim()}"`,(n[2].trim().startsWith("'")&&n[2].trim().endsWith("'")||n[2].trim().startsWith('"')&&n[2].trim().endsWith('"'))&&(last=n[2].trim()),e.includes("where_subquery_group")&&(condition=t[` ${n[2].trim()}`].trim(),/^(\(select|\( select)/g.test(condition)?last=getSubquery(condition):last="["+t[` ${n[2]}`].trim().replace(/^\(/g,"").replace(/\)$/g,"")+"]"),"in"==n[1].trim()?`->${r}In("${n[0]}", ${last})`:"is"==n[1].trim()||"between"==n[1].trim()?`->${r}(DB::raw("${e}"))`:`->${r}("${n[0]}", "${n[1]}", ${last})`)}function lowerCaseFirstLetter(e){return e.charAt(0).toLowerCase()+e.slice(1)}function where(e,t,r="where"){var n=e.split(" "),i=e,o=`"${i.split(" ")[0]||""}", "${i.split(" ")[1]||""}"`;return void 0===n[1]&&void 0!==t[` ${n[0].trim()}`]?`->${r}(DB::raw("${t[` ${n[0]}`].trim()}"))`:void 0===n[1]?(console.log(n),`->${r}(DB::raw("${e.trim()}"))`):(last=`"${n[2]}"`,e.includes("where_subquery_group")&&(condition=t[` ${n[2].trim()}`].trim(),/^(\(select|\( select)/g.test(condition)?last=getSubquery(condition):last="["+t[` ${n[2]}`].trim().replace(/^\(/g,"").replace(/\)$/g,"")+"]"),"in"==n[1].trim()?`->${r}In("${n[0]}", ${last})`:/is null/g.test(e)?`->${r}Null("${n[0]}")`:/is not null/g.test(e)?`->${r}NotNull("${n[0]}")`:/between /g.test(e)?`->${r}Between("${n[0]}", [${n[2]||""}, ${n[4]||""}])`:`->${r}(${o}, ${last})`)}function getSubquery(e){return`function($query){\n\t${convertSQL(e=e.replace(/`(.+?)`$/g,""),!0)}\n}`}function getAlias(e){var t=(e=e.trim()).match(/`.+?`$/g);return Array.isArray(t)||(t=[]),(t[0]||"").replace(/`/g,"").trim()}function getAll(e,t,r=""){var n={},i=t.match(e);Array.isArray(i)||(i=[]);var o=1;for(match of i)replace=` ${r}_${o}_`,""==r&&(replace=""),t=t.replace(match,replace),n[replace]=match,o++;return{result:n,input:t,matches:i}}function markUp(e){var t=e.match(/"(.+?)"/g);Array.isArray(t)||(t=[]);var r={},n=1;for(string of t)key=`quoted_string_${n}_`,r[key]=string,e=e.replace(string,key),n++;for(key in e=(e=(e=(e=(e=(e=e.replace(/(>|::|:)(\D+?)(\()/g,"$1<span class='g'>$2</span>$3")).replace(/(::|->)/g,"<span class='r'>$1</span>")).replace(/(function)/g,"<i class='b'>$1</i>")).replace(/(DB)/g,"<span class='b'>$1</span>")).replace(/(\(|\)|"|,|\[|\]|;|\{|\})/g,"<span style='color:gray'>$1</span>")).replace(/(\$[a-z]+)/g,"<span style='color:white'>$1</span>"),r){string=r[key];var i=new RegExp(key,"g");e=e.replace(i,`<span style='color:#FFFCB2;'>${string}</span>`)}return e}